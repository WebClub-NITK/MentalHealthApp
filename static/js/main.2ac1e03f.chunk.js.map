{"version":3,"sources":["firebaseConfig.js","Context/AuthContext.js","Components/Pages/NewPost/Blog.js","Components/Pages/NewPost/Image.js","Components/Pages/NewPost/index.js","Components/Pages/Home/index.js","Components/Pages/SignIn.js","Components/Pages/SignUp.js","Components/Shared/Nav.js","Components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","storage","firestore","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","newUserName","useRef","toast","useToast","a","signOut","toastID","isActive","id","title","status","isClosable","position","useEffect","usersRef","collection","onAuthStateChanged","user","doc","uid","get","snapshot","exists","console","log","newUser","email","name","displayName","current","contentCreator","photoURL","admin","set","data","value","loginWithEmailAndPassword","password","signInWithEmailAndPassword","signUpWithEmailAndPassword","createUserWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","logout","resetPassword","sendPasswordResetEmail","Provider","MyUploadAdapter","loader","this","file","then","Promise","resolve","reject","uploadTask","ref","child","put","on","TaskEvent","STATE_CHANGED","progress","bytesTransferred","totalBytes","state","TaskState","PAUSED","RUNNING","error","code","getDownloadURL","downloadURL","default","Blog","postsRef","editorRef","isModalOpen","setModalOpen","setTitle","description","setDescription","navigate","useNavigate","handleModalClose","isOpen","onClose","isRequired","type","placeholder","size","onChange","e","currentTarget","mt","resize","isDisabled","colorScheme","mr","onClick","className","content","getData","post","createdAt","Date","toISOString","authorID","authorName","add","catch","ml","editor","ClassicEditor","onReady","plugins","createUploadAdapter","Image","NewPost","path","element","Choose","to","Home","SignIn","setEmail","setPassword","submitting","setSubmitting","handleSubmit","preventDefault","handleSignInWithGoogle","width","align","justifyContent","p","maxWidth","borderWidth","borderRadius","boxShadow","textAlign","my","onSubmit","isLoading","loadingText","mb","color","leftIcon","as","RouterLink","setName","Nav","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ac1e03f.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyBvuhOtC73r5cFvVralc_K4JQNOOsoV40Q\",\r\n    authDomain: \"mental-health-app-e2112.firebaseapp.com\",\r\n    projectId: \"mental-health-app-e2112\",\r\n    storageBucket: \"mental-health-app-e2112.appspot.com\",\r\n    messagingSenderId: \"853014821948\",\r\n    appId: \"1:853014821948:web:824fe17da40b19646bd739\",\r\n    measurementId: \"G-K4WSJ64G2Y\"\r\n});\r\n\r\nexport const auth = firebase.auth();\r\nexport const storage = firebase.storage();\r\nconst firestore = firebase.firestore();\r\nexport default firestore;","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport firestore, { auth } from \"../firebaseConfig\";\r\nimport firebase from \"firebase/app\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport default function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const newUserName = useRef('');\r\n    const toast = useToast();\r\n\r\n    function signUpWithEmailAndPassword(name, email, password) {\r\n        newUserName.current=name;\r\n        console.log(name);\r\n        return auth.createUserWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function signInWithGoogle() {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        return auth.signInWithPopup(provider);\r\n    }\r\n\r\n    function loginWithEmailAndPassword(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    async function logout() {\r\n        await auth.signOut();\r\n        const toastID = \"signout-succ\";\r\n        if (!toast.isActive(toastID)) {\r\n            toast({\r\n                id: toastID,\r\n                title: `Signed out successfully`,\r\n                status: \"success\",\r\n                isClosable: true,\r\n                position: \"top-right\",\r\n            });\r\n        };\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const usersRef = firestore.collection(\"users\");\r\n        const unsubscribe = auth.onAuthStateChanged(async (user) => {\r\n            if (!user) {\r\n                setCurrentUser(null);\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            let currentUser = {};\r\n            const snapshot = await usersRef.doc(user.uid).get();\r\n            if (!snapshot.exists) {\r\n                console.log(\"Inside\", newUserName);\r\n                const newUser = {\r\n                    email: user.email,\r\n                    name: user.displayName || newUserName.current,\r\n                    contentCreator: false,\r\n                    photoURL: user.photoURL,\r\n                    admin: false,\r\n                };\r\n                await usersRef.doc(user.uid).set(newUser);\r\n                currentUser = { ...newUser, uid: user.uid };\r\n            } else {\r\n                currentUser = { ...snapshot.data(), uid: user.uid };\r\n            }\r\n            newUserName.current='';\r\n            setCurrentUser(currentUser);\r\n            setLoading(false);\r\n\r\n            const toastID = `${currentUser.uid}-signin-succ`;\r\n            if (!toast.isActive(toastID)) {\r\n                toast({\r\n                    id: toastID,\r\n                    title: `Signed in as ${currentUser.name}`,\r\n                    status: \"success\",\r\n                    isClosable: true,\r\n                    position: \"top-right\",\r\n                });\r\n            }\r\n        });\r\n\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    const value = {\r\n        currentUser,\r\n        loginWithEmailAndPassword,\r\n        signUpWithEmailAndPassword,\r\n        signInWithGoogle,\r\n        logout,\r\n        resetPassword,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n","import { useRef, useState } from \"react\";\r\nimport firebase from 'firebase/app';\r\nimport firestore, {storage} from \"../../../firebaseConfig\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport { useAuth } from \"../../../Context/AuthContext\";\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    FormControl,\r\n    Input,\r\n    Textarea,\r\n    FormLabel,\r\n    Button,\r\n    useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport './editor.scss';\r\n\r\nclass MyUploadAdapter {\r\n  constructor(loader) {\r\n    this.loader = loader;\r\n  }\r\n  // Starts the upload process.\r\n  upload() {\r\n    return this.loader.file.then(\r\n      file=>\r\n        new Promise((resolve, reject) => {\r\n          let storageRef = storage.ref();\r\n          let uploadTask = storageRef\r\n            .child(file.name)\r\n            .put(file);\r\n          uploadTask.on(\r\n            firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n            function(snapshot) {\r\n              // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n              var progress =\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n              console.log(\"Upload is \" + progress + \"% done\");\r\n              switch (snapshot.state) {\r\n                case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                  console.log(\"Upload is paused\");\r\n                  break;\r\n                case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                  console.log(\"Upload is running\");\r\n                  break;\r\n              }\r\n            },\r\n            function(error) {\r\n              // A full list of error codes is available at\r\n              // https://firebase.google.com/docs/storage/web/handle-errors\r\n              // eslint-disable-next-line default-case\r\n              switch (error.code) {\r\n                case \"storage/unauthorized\":\r\n                  reject(\" User doesn't have permission to access the object\");\r\n                  break;\r\n\r\n                case \"storage/canceled\":\r\n                  reject(\"User canceled the upload\");\r\n                  break;\r\n\r\n                case \"storage/unknown\":\r\n                  reject(\r\n                    \"Unknown error occurred, inspect error.serverResponse\"\r\n                  );\r\n                  break;\r\n              }\r\n            },\r\n            function() {\r\n              // Upload completed successfully, now we can get the download URL\r\n              uploadTask.snapshot.ref\r\n                .getDownloadURL()\r\n                .then(function(downloadURL) {\r\n                  // console.log(\"File available at\", downloadURL);\r\n                  resolve({\r\n                    default: downloadURL\r\n                  });\r\n                });\r\n            }\r\n          );\r\n        })\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default function Blog() {\r\n    const postsRef = firestore.collection(\"posts\");\r\n    const editorRef = useRef(null);\r\n    const [ isModalOpen, setModalOpen ] = useState(true);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const { currentUser } = useAuth();\r\n    const toast = useToast();\r\n    const navigate = useNavigate();\r\n\r\n    const handleModalClose = () => {\r\n      setModalOpen(false);\r\n    }\r\n\r\n    const handleSubmitBlog = () => {\r\n        const content = editorRef.current.getData();\r\n        const d = new Date();\r\n        const post = {\r\n            createdAt: d.toISOString(),\r\n            authorID: currentUser.uid,\r\n            authorName: currentUser.name,\r\n            content,\r\n            title,\r\n            description,\r\n            type: \"blog\",\r\n        };\r\n        postsRef\r\n            .add(post)\r\n            .then(() => {\r\n                const toastID = \"publish-success\";\r\n                if (!toast.isActive(toastID)) {\r\n                    toast({\r\n                        id: toastID,\r\n                        title: \"Blog published successfully\",\r\n                        status: \"success\",\r\n                        isClosable: true,\r\n                        position: \"top-right\",\r\n                    });\r\n                }\r\n                navigate('/');\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                const toastID = \"publish-fail\";\r\n                if (!toast.isActive(toastID)) {\r\n                    toast({\r\n                        id: toastID,\r\n                        title: \"Unable publish blog\",\r\n                        status: \"error\",\r\n                        isClosable: true,\r\n                        position: \"top-right\",\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    if (!currentUser) {\r\n        return <p>Please sign in to write a blog..</p>;\r\n    }\r\n\r\n    if (!(currentUser.contentCreator || currentUser.admin)) {\r\n        return (\r\n            <p>You need to be a content creator to be able to write blogs...</p>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal isOpen={isModalOpen} onClose={handleModalClose}>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>New Blog</ModalHeader>\r\n                    <ModalBody>\r\n                        <FormControl isRequired>\r\n                            <FormLabel>Title</FormLabel>\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Blog title\"\r\n                                size=\"lg\"\r\n                                onChange={(e) =>\r\n                                    setTitle(e.currentTarget.value)\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl mt={4} isRequired>\r\n                            <FormLabel>Description</FormLabel>\r\n                            <Textarea\r\n                                placeholder=\"Here is a sample placeholder\"\r\n                                size=\"lg\"\r\n                                resize=\"horizontal\"\r\n                                onChange={(e) =>\r\n                                    setDescription(e.currentTarget.value)\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button\r\n                            isDisabled={!title || !description}\r\n                            colorScheme=\"blue\"\r\n                            mr={3}\r\n                            onClick={handleModalClose}\r\n                        >\r\n                            Start editing\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n\r\n            <div className=\"main\">\r\n                <Button colorScheme=\"blue\" onClick={handleSubmitBlog}>Publish!</Button>\r\n                <Button ml={2} colorScheme=\"blue\" onClick={()=>console.log(editorRef.current.getData())}>Log the content!</Button>\r\n                <CKEditor\r\n                    editor={ClassicEditor}\r\n                    data={`<h1>${title}</h1>`}\r\n                    onReady={(editor) => {\r\n                        editorRef.current = editor;\r\n                        editor.plugins.get(\"FileRepository\").createUploadAdapter = loader => {\r\n                          return new MyUploadAdapter(loader);\r\n                        };\r\n                    }}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","export default function Image() {\r\n    return (\r\n        <div>\r\n            <p>Here you will be able to add a image type post</p>\r\n        </div>\r\n    )\r\n}\r\n","import { Routes, Route, Link } from 'react-router-dom';\r\nimport Blog from './Blog';\r\nimport Image from './Image';\r\n\r\nexport default function NewPost() {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Choose />} />\r\n                <Route path=\"blog\" element={<Blog />} />\r\n                <Route path=\"image\" element={<Image />} />\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Choose() {\r\n    return (\r\n        <div>\r\n            <Link to=\"/new/image\">Image type</Link>\r\n            <Link to=\"/new/blog\">Blog type</Link>\r\n        </div>\r\n    )\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport default function Home () {\r\n    return (\r\n        <div>\r\n            <h1>Hi!</h1>\r\n            <p>This is the home page but hasn't been implemented yet :/</p>\r\n            <p>meanwhile, you can try creating a blog type input <Link to=\"/new/blog\">here</Link></p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Flex,\r\n    Box,\r\n    Heading,\r\n    FormLabel,\r\n    Input,\r\n    Button,\r\n    FormControl,\r\n    useToast,\r\n    Text,\r\n    HStack,\r\n    Link,\r\n} from \"@chakra-ui/react\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\n\r\nexport default function SignIn() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const { loginWithEmailAndPassword, signInWithGoogle } = useAuth();\r\n    const toast = useToast();\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            setSubmitting(true);\r\n            await loginWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            const toastID = \"signin-fail\";\r\n            if (!toast.isActive(toastID)) {\r\n                toast({\r\n                    id: toastID,\r\n                    title: \"Unable to sign in\",\r\n                    description: \"Please check the email and password\",\r\n                    status: \"error\",\r\n                    isClosable: true,\r\n                    position: \"top-right\",\r\n                });\r\n            }\r\n        }\r\n        setSubmitting(false);\r\n        navigate('/');\r\n    };\r\n\r\n    const handleSignInWithGoogle = async() => {\r\n        setSubmitting(true);\r\n        await signInWithGoogle();\r\n        setSubmitting(false);\r\n        navigate('/');\r\n    }\r\n\r\n    return (\r\n        <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\r\n            <Box\r\n                p={8}\r\n                maxWidth=\"500px\"\r\n                borderWidth={1}\r\n                borderRadius={8}\r\n                boxShadow=\"lg\"\r\n            >\r\n                <Box textAlign=\"center\">\r\n                    <Heading>Login</Heading>\r\n                </Box>\r\n                <Box my={4} textAlign=\"left\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <FormControl isRequired>\r\n                            <FormLabel>Email</FormLabel>\r\n                            <Input\r\n                                type=\"email\"\r\n                                placeholder=\"your@example.com\"\r\n                                size=\"lg\"\r\n                                onChange={(e) =>\r\n                                    setEmail(e.currentTarget.value)\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl mt={4} isRequired>\r\n                            <FormLabel>Password</FormLabel>\r\n                            <Input\r\n                                type=\"password\"\r\n                                placeholder=\"*******\"\r\n                                size=\"lg\"\r\n                                onChange={(e) =>\r\n                                    setPassword(e.currentTarget.value)\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <Button\r\n                            isLoading={submitting}\r\n                            loadingText=\"Submitting\"\r\n                            width=\"full\"\r\n                            mt={4}\r\n                            type=\"submit\"\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                    </form>\r\n                    <Box textAlign=\"center\" mt=\"4\" mb=\"2\">\r\n                        <Text color=\"gray.500\">Or, sign in with</Text>\r\n                    </Box>\r\n                    <HStack>\r\n                        <Button width=\"full\" leftIcon={<FcGoogle />} onClick={handleSignInWithGoogle}>\r\n                            Google\r\n                        </Button>\r\n                    </HStack>\r\n                    <Box textAlign=\"center\" mt=\"5\">\r\n                        <Text color=\"gray.500\">\r\n                            Don't have an account?{\" \"}\r\n                            <Link as={RouterLink} to=\"/sign_up\" color=\"blue.400\">\r\n                                Register\r\n                            </Link>\r\n                        </Text>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Flex>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Flex,\r\n    Box,\r\n    Heading,\r\n    FormLabel,\r\n    Input,\r\n    Button,\r\n    FormControl,\r\n    useToast,\r\n    Text,\r\n    HStack,\r\n    Link,\r\n} from \"@chakra-ui/react\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\n\r\nexport default function SignIn() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const { signUpWithEmailAndPassword, signInWithGoogle } = useAuth();\r\n    const toast = useToast();\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            setSubmitting(true);\r\n            await signUpWithEmailAndPassword(name, email, password);\r\n            const toastID = 'signin-succ';\r\n            if (!toast.isActive(toastID)) {\r\n                toast({\r\n                    id: toastID,\r\n                    title: \"Account created successfully\",\r\n                    status: \"success\",\r\n                    isClosable: true,\r\n                    position: \"top-right\",\r\n                });\r\n            }\r\n        } catch (error) {\r\n            const toastID = \"signup-fail\";\r\n            if (!toast.isActive(toastID)) {\r\n                toast({\r\n                    id: toastID,\r\n                    title: \"Unable to create an account\",\r\n                    description: \"Please check the email and password\",\r\n                    status: \"error\",\r\n                    isClosable: true,\r\n                    position: \"top-right\",\r\n                });\r\n            }\r\n        }\r\n        setSubmitting(false);\r\n        navigate('/');\r\n    };\r\n\r\n    const handleSignInWithGoogle = async() => {\r\n        setSubmitting(true);\r\n        await signInWithGoogle();\r\n        setSubmitting(false);\r\n        navigate('/');\r\n    }\r\n\r\n    return (\r\n        <Flex width=\"full\" align=\"center\" justifyContent=\"center\">\r\n            <Box\r\n                p={8}\r\n                maxWidth=\"500px\"\r\n                borderWidth={1}\r\n                borderRadius={8}\r\n                boxShadow=\"lg\"\r\n            >\r\n                <Box textAlign=\"center\">\r\n                    <Heading>Sign Up</Heading>\r\n                </Box>\r\n                <Box my={4} textAlign=\"left\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <FormControl isRequired>\r\n                            <FormLabel>Name</FormLabel>\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Your name\"\r\n                                size=\"lg\"\r\n                                onChange={(e) =>\r\n                                    setName(e.currentTarget.value)\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl mt={4} isRequired>\r\n                            <FormLabel>Email</FormLabel>\r\n                            <Input\r\n                                type=\"email\"\r\n                                placeholder=\"your@example.com\"\r\n                                size=\"lg\"\r\n                                onChange={(e) =>\r\n                                    setEmail(e.currentTarget.value)\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl mt={4} isRequired>\r\n                            <FormLabel>Password</FormLabel>\r\n                            <Input\r\n                                type=\"password\"\r\n                                placeholder=\"*******\"\r\n                                size=\"lg\"\r\n                                onChange={(e) =>\r\n                                    setPassword(e.currentTarget.value)\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <Button\r\n                            isLoading={submitting}\r\n                            loadingText=\"Submitting\"\r\n                            width=\"full\"\r\n                            mt={4}\r\n                            type=\"submit\"\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                    </form>\r\n                    <Box textAlign=\"center\" mt=\"4\" mb=\"2\">\r\n                        <Text color=\"gray.500\">Or, sign in with</Text>\r\n                    </Box>\r\n                    <HStack>\r\n                        <Button width=\"full\" leftIcon={<FcGoogle />} onClick={handleSignInWithGoogle}>\r\n                            Google\r\n                        </Button>\r\n                    </HStack>\r\n                    <Box textAlign=\"center\" mt=\"5\">\r\n                        <Text color=\"gray.500\">\r\n                            Already have an account?{\" \"}\r\n                            <Link as={RouterLink} to=\"/sign_in\" color=\"blue.400\">\r\n                                Sign In\r\n                            </Link>\r\n                        </Text>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Flex>\r\n    );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../Context/AuthContext\";\r\n\r\n\r\nexport default function Nav() {\r\n    const {currentUser, logout} = useAuth();\r\n    return (\r\n        <nav>\r\n            <h1>Mental Health App</h1>\r\n            {currentUser ? <p onClick={logout}>Sign Out</p> \r\n            :\r\n            <>\r\n                <Link to=\"sign_in\">Sign In</Link>{' '}\r\n                <Link to=\"sign_up\">Sign Up</Link>\r\n            </>}\r\n\r\n        </nav>\r\n    )\r\n}\r\n","import { HashRouter, Routes, Route } from \"react-router-dom\";\nimport NewPost from \"./Pages/NewPost\";\nimport Home from \"./Pages/Home\";\nimport SignIn from \"./Pages/SignIn\";\nimport SignUp from \"./Pages/SignUp\";\nimport AuthProvider from \"../Context/AuthContext\";\nimport Nav from \"./Shared/Nav\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <AuthProvider>\n                <HashRouter>\n                    <Nav />\n                    <Routes>\n                        <Route path=\"/\" element={<Home />} />\n                        <Route path=\"/sign_in\" element={<SignIn />} />\n                        <Route path=\"/sign_up\" element={<SignUp />} />\n                        <Route path=\"new/*\" element={<NewPost />} />\n                    </Routes>\n                </HashRouter>\n            </AuthProvider>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport { ChakraProvider } from '@chakra-ui/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}